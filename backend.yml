- name: Backend Setup
  hosts: all
  become: true
  tasks:
    - name: disable default version of NodeJS
      ansible.builtin.shell: dnf module disable nodejs -y
    - name: Enable NodeJS 18 Version
      ansible.builtin.shell: dnf module enable nodejs:18 -y
    - name: Install NodeJS
      ansible.builtin.dnf:
        name: nodejs
        state: installed
    - name: Configure Backend Service
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service
    - name: Adding Application user
      ansible.builtin.user:
        name: expense
    - name: Remove existing app content
      ansible.builtin.file:
        path: /app
        state: absent
    - name: Create Application directory
      ansible.builtin.file:
        path: /app
        state: directory
    - name: download and extract app content
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/backend.zip
        dest: /app
        remote_src: true
    - name: download dependencies
      community.general.npm:
        path: /app
    - name: Reloading systemd and start backend services
      ansible.builtin.systemd_service:
        name: backend
        state: restarted
        enabled: yes
    - name: install mysql client
      ansible.builtin.dnf:
        name: mysql
        state: installed
    - name: install python library for mysql
      ansible.builtin.dnf:
        name: python3-PyMySQL
        state: installed
    - name: load schema
      community.mysql.mysql_db:
        state: import
        name: all
        target: /app/schema/backend.sql
        login_user: root
        login_password: ExpenseApp@1
        login_host: mysql-dev.tsdevops25.online